{"version":3,"sources":["../../../app/components/Todo.jsx"],"names":["React","require","moment","Todo","createClass","render","props","id","text","completed","createdAt","completedAt","todoClassName","renderDate","message","timestamp","unix","format","onToggle","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;;AAEA,IAAIE,OAAOH,MAAMI,WAAN,CAAkB;AAAA;;AACzBC,YAAQ,kBAAY;AAAA;;AAAA,qBACoC,KAAKC,KADzC;AAAA,YACXC,EADW,UACXA,EADW;AAAA,YACPC,IADO,UACPA,IADO;AAAA,YACDC,SADC,UACDA,SADC;AAAA,YACUC,SADV,UACUA,SADV;AAAA,YACqBC,WADrB,UACqBA,WADrB;;AAEhB,YAAIC,gBAAgBH,YAAY,qBAAZ,GAAoC,MAAxD;AACA,YAAII,aAAa,SAAbA,UAAa,GAAM;AACnB,gBAAIC,UAAU,aAAd;AACA,gBAAIC,YAAYL,SAAhB;;AAEA,gBAAID,SAAJ,EAAe;AACXK,0BAAU,eAAV;AACAC,4BAAYJ,WAAZ;AACH;;AAED,mBAAOG,UAAUZ,OAAOc,IAAP,CAAYD,SAAZ,EAAuBE,MAAvB,CAA8B,wBAA9B,CAAjB;AACH,SAVD;;AAYA,eACI;AAAA;AAAA,cAAK,WAAWL,aAAhB,EAA+B,SAAS,mBAAM;AAC1C,0BAAKN,KAAL,CAAWY,QAAX,CAAoBX,EAApB;AACH,iBAFD;AAOI;AAAA;AAAA;AACI,+CAAO,MAAK,UAAZ,EAAuB,SAASE,SAAhC,EAA2C,UAAU,oBAAM,CAC1D,CADD;AADJ,aAPJ;AAWI;AAAA;AAAA,kBAAK,WAAU,eAAf;AACI;AAAA;AAAA;AAAID;AAAJ,iBADJ;AAEI;AAAA;AAAA;AAAIK;AAAJ;AAFJ;AAXJ,SADJ;AAkBH;AAlCwB,CAAlB,CAAX;;AAqCAM,OAAOC,OAAP,GAAiBjB,IAAjB","file":"Todo.js","sourcesContent":["let React = require('react');\r\nlet moment = require('moment');\r\n\r\nlet Todo = React.createClass({\r\n    render: function () {\r\n        let {id, text, completed, createdAt, completedAt} = this.props;\r\n        let todoClassName = completed ? 'todo todo-completed' : 'todo';\r\n        let renderDate = () => {\r\n            let message = 'Created at ';\r\n            let timestamp = createdAt;\r\n\r\n            if (completed) {\r\n                message = 'Completed at ';\r\n                timestamp = completedAt;\r\n            }\r\n\r\n            return message + moment.unix(timestamp).format('MMMM Do, YYYY @hh:mm A');\r\n        };\r\n\r\n        return (\r\n            <div className={todoClassName} onClick={() => {\r\n                this.props.onToggle(id);\r\n            }}>\r\n                {\r\n                    /* Show warning without onChange handler, so I just return\r\n                     */\r\n                }\r\n                <div>\r\n                    <input type=\"checkbox\" checked={completed} onChange={() => {\r\n                    }}/>\r\n                </div>\r\n                <div className=\"todo__subtext\">\r\n                    <p>{text}</p>\r\n                    <p>{renderDate()}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nmodule.exports = Todo;"]}