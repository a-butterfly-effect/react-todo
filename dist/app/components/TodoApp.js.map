{"version":3,"sources":["../../../app/components/TodoApp.jsx"],"names":["React","require","uuid","moment","TodoSearch","TodoList","AddTodo","TodoAPI","TodoApp","createClass","getInitialState","showCompleted","searchText","todos","getTodos","componentDidUpdate","setTodos","state","handleAddTodo","text","setState","id","completed","createdAt","unix","completedAt","undefined","handleToggle","updatedTodos","map","todo","handleSearch","toLowerCase","render","filteredTodos","filterTodos","module","exports"],"mappings":";;;;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,OAAOD,QAAQ,WAAR,CAAX;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;;AAEA,IAAIG,aAAaH,QAAQ,YAAR,CAAjB;AACA,IAAII,WAAWJ,QAAQ,UAAR,CAAf;AACA,IAAIK,UAAUL,QAAQ,SAAR,CAAd;AACA,IAAIM,UAAUN,QAAQ,SAAR,CAAd;;AAEA,IAAIO,UAAUR,MAAMS,WAAN,CAAkB;AAAA;;AAC5BC,qBAAoB,2BAAY;AAC5B,eAAO;AACHC,2BAAe,KADZ;AAEHC,wBAAe,EAFZ;AAGH;AACAC,mBAAeN,QAAQO,QAAR;AAJZ,SAAP;AAMH,KAR2B;AAS5B;AACAC,wBAAoB,8BAAY;AAC5BR,gBAAQS,QAAR,CAAiB,KAAKC,KAAL,CAAWJ,KAA5B;AACH,KAZ2B;AAa5BK,mBAAoB,uBAAUC,IAAV,EAAgB;AAChC,aAAKC,QAAL,CAAc;AACVP,gDACO,KAAKI,KAAL,CAAWJ,KADlB,IAEI;AACI;AACAQ,oBAAanB,MAFjB;AAGIiB,sBAAaA,IAHjB;AAIIG,2BAAa,KAJjB;AAKIC,2BAAapB,SAASqB,IAAT,EALjB;AAMIC,6BAAaC;AANjB,aAFJ;AADU,SAAd;AAaH,KA3B2B;AA4B5BC,kBAAoB,sBAAUN,EAAV,EAAc;AAC9B,YAAIO,eAAe,KAAKX,KAAL,CAAWJ,KAAX,CAAiBgB,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC9C,gBAAIA,KAAKT,EAAL,KAAYA,EAAhB,EAAoB;AAChBS,qBAAKR,SAAL,GAAiB,CAACQ,KAAKR,SAAvB;AACAQ,qBAAKL,WAAL,GAAmBK,KAAKR,SAAL,GAAiBnB,SAASqB,IAAT,EAAjB,GAAmCE,SAAtD;AACH;;AAED,mBAAOI,IAAP;AACH,SAPkB,CAAnB;;AASA,aAAKV,QAAL,CAAc;AACVP,mBAAOe;AADG,SAAd;AAGH,KAzC2B;AA0C5BG,kBAAoB,sBAAUpB,aAAV,EAAyBC,UAAzB,EAAqC;AACrD,aAAKQ,QAAL,CAAc;AACVT,2BAAeA,aADL;AAEVC,wBAAeA,WAAWoB,WAAX;AAFL,SAAd;AAIH,KA/C2B;AAgD5BC,YAAoB,kBAAY;AAAA,qBACa,KAAKhB,KADlB;AAAA,YACvBJ,KADuB,UACvBA,KADuB;AAAA,YAChBF,aADgB,UAChBA,aADgB;AAAA,YACDC,UADC,UACDA,UADC;AAE5B;;AACA,YAAIsB,gBAAgB3B,QAAQ4B,WAAR,CAAoBtB,KAApB,EAA2BF,aAA3B,EAA0CC,UAA1C,CAApB;;AAEA,eACI;AAAA;AAAA,cAAK,WAAU,UAAf;AACI,gCAAC,UAAD,IAAY,UAAU,KAAKmB,YAA3B,GADJ;AAEI,gCAAC,QAAD,IAAU,OAAOG,aAAjB,EAAgC,UAAU,KAAKP,YAA/C,GAFJ;AAGI,gCAAC,OAAD,IAAS,WAAW,KAAKT,aAAzB;AAHJ,SADJ;AAOH;AA5D2B,CAAlB,CAAd;;AA+DAkB,OAAOC,OAAP,GAAiB7B,OAAjB","file":"TodoApp.js","sourcesContent":["let React = require('react');\r\nlet uuid = require('node-uuid');\r\nlet moment = require('moment');\r\n\r\nlet TodoSearch = require('TodoSearch');\r\nlet TodoList = require('TodoList');\r\nlet AddTodo = require('AddTodo');\r\nlet TodoAPI = require('TodoAPI');\r\n\r\nlet TodoApp = React.createClass({\r\n    getInitialState   : function () {\r\n        return {\r\n            showCompleted: false,\r\n            searchText   : '',\r\n            // Load the todos\r\n            todos        : TodoAPI.getTodos()\r\n        };\r\n    },\r\n    // Save the todos\r\n    componentDidUpdate: function () {\r\n        TodoAPI.setTodos(this.state.todos);\r\n    },\r\n    handleAddTodo     : function (text) {\r\n        this.setState({\r\n            todos: [\r\n                ...this.state.todos,\r\n                {\r\n                    // Generate random ID\r\n                    id         : uuid(),\r\n                    text       : text,\r\n                    completed  : false,\r\n                    createdAt  : moment().unix(),\r\n                    completedAt: undefined\r\n                }\r\n            ]\r\n        })\r\n    },\r\n    handleToggle      : function (id) {\r\n        let updatedTodos = this.state.todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed;\r\n                todo.completedAt = todo.completed ? moment().unix() : undefined;\r\n            }\r\n\r\n            return todo;\r\n        });\r\n\r\n        this.setState({\r\n            todos: updatedTodos\r\n        });\r\n    },\r\n    handleSearch      : function (showCompleted, searchText) {\r\n        this.setState({\r\n            showCompleted: showCompleted,\r\n            searchText   : searchText.toLowerCase()\r\n        });\r\n    },\r\n    render            : function () {\r\n        let {todos, showCompleted, searchText} = this.state;\r\n        // Filter the todos\r\n        let filteredTodos = TodoAPI.filterTodos(todos, showCompleted, searchText);\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <TodoSearch onSearch={this.handleSearch}/>\r\n                <TodoList todos={filteredTodos} onToggle={this.handleToggle}/>\r\n                <AddTodo onAddTodo={this.handleAddTodo}/>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nmodule.exports = TodoApp;"]}