{"version":3,"sources":["../../../app/api/TodoAPI.jsx"],"names":["$","require","module","exports","setTodos","todos","isArray","localStorage","setItem","JSON","stringify","getTodos","stringTodos","getItem","parse","e","filterTodos","showCompleted","searchText","filteredTodos","filter","todo","completed","lowerCText","text","toLowerCase","length","indexOf","sort","a","b"],"mappings":";;AAAA,IAAIA,IAAIC,QAAQ,QAAR,CAAR;;AAEAC,OAAOC,OAAP,GAAiB;AACbC,cAAa,kBAAUC,KAAV,EAAiB;AAC1B;AACA,YAAIL,EAAEM,OAAF,CAAUD,KAAV,CAAJ,EAAsB;AAClB;AACAE,yBAAaC,OAAb,CAAqB,OAArB,EAA8BC,KAAKC,SAAL,CAAeL,KAAf,CAA9B;;AAEA;AACA,mBAAOA,KAAP;AACH;AACJ,KAVY;AAWbM,cAAa,oBAAY;AACrB,YAAIC,cAAcL,aAAaM,OAAb,CAAqB,OAArB,CAAlB;AACA,YAAIR,QAAQ,EAAZ;;AAEA,YAAI;AACA;AACAA,oBAAQI,KAAKK,KAAL,CAAWF,WAAX,CAAR;AACH,SAHD,CAGE,OAAOG,CAAP,EAAU,CAEX;AADG;;;AAGJ;AACA,eAAOf,EAAEM,OAAF,CAAUD,KAAV,IAAmBA,KAAnB,GAA2B,EAAlC;AACH,KAxBY;AAyBbW,iBAAa,qBAAUX,KAAV,EAAiBY,aAAjB,EAAgCC,UAAhC,EAA4C;AACrD,YAAIC,gBAAgBd,KAApB;;AAEA;AACAc,wBAAgBA,cAAcC,MAAd,CAAqB,UAACC,IAAD,EAAU;AAC3C;AACA,mBAAO,CAACA,KAAKC,SAAN,IAAmBL,aAA1B;AACH,SAHe,CAAhB;;AAKA;AACAE,wBAAgBA,cAAcC,MAAd,CAAqB,UAACC,IAAD,EAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAIE,aAAaF,KAAKG,IAAL,CAAUC,WAAV,EAAjB;AACA,mBAAOP,WAAWQ,MAAX,KAAsB,CAAtB,IAA2BH,WAAWI,OAAX,CAAmBT,WAAWO,WAAX,EAAnB,MAAiD,CAAC,CAApF;AACH,SAZe,CAAhB;;AAcA;AACAN,sBAAcS,IAAd,CAAmB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB,gBAAID,EAAEP,SAAF,IAAeQ,EAAER,SAArB,EAAgC;AAC5B;AACA,uBAAO,CAAC,CAAR;AACH,aAHD,MAGO,IAAIO,EAAEP,SAAF,IAAe,CAACQ,EAAER,SAAtB,EAAiC;AACpC;AACA,uBAAO,CAAP;AACH,aAHM,MAGA;AACH;AACA,uBAAO,CAAP;AACH;AACJ,SAXD;;AAaA;;AAEA,eAAOH,aAAP;AACH;AAlEY,CAAjB","file":"TodoAPI.js","sourcesContent":["let $ = require('jquery');\r\n\r\nmodule.exports = {\r\n    setTodos   : function (todos) {\r\n        // Check if array\r\n        if ($.isArray(todos)) {\r\n            // Take an array and convert it into string\r\n            localStorage.setItem('todos', JSON.stringify(todos));\r\n\r\n            // Good to check if the new todo is added\r\n            return todos;\r\n        }\r\n    },\r\n    getTodos   : function () {\r\n        let stringTodos = localStorage.getItem('todos');\r\n        let todos = [];\r\n\r\n        try {\r\n            // Convert a string back into an array\r\n            todos = JSON.parse(stringTodos);\r\n        } catch (e) {\r\n            // If it fails the default array is used\r\n        }\r\n\r\n        // Check if data is valid\r\n        return $.isArray(todos) ? todos : [];\r\n    },\r\n    filterTodos: function (todos, showCompleted, searchText) {\r\n        let filteredTodos = todos;\r\n\r\n        // Filter by showCompleted\r\n        filteredTodos = filteredTodos.filter((todo) => {\r\n            // If showCompleted is checked (true) we're gonna return every single item\r\n            return !todo.completed || showCompleted;\r\n        });\r\n\r\n        // Filter by searchText\r\n        filteredTodos = filteredTodos.filter((todo) => {\r\n            // if (searchText !== '') {\r\n            //     // Check if searchText.toLowerCase() exists in the todo.text.toLowerCase() text\r\n            //     if (todo.text.toLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            //         return true;\r\n            //     }\r\n            // } else {\r\n            //     // If searchText is nothing, return every todo item\r\n            //     return true;\r\n            // }\r\n            let lowerCText = todo.text.toLowerCase();\r\n            return searchText.length === 0 || lowerCText.indexOf(searchText.toLowerCase()) !== -1;\r\n        });\r\n\r\n        // sort() modifies the existing array\r\n        filteredTodos.sort((a, b) => {\r\n            if (a.completed && b.completed) {\r\n                // a should come before b\r\n                return -1;\r\n            } else if (a.completed && !b.completed) {\r\n                // b should come before a\r\n                return 1;\r\n            } else {\r\n                // no change\r\n                return 0\r\n            }\r\n        });\r\n\r\n        // Sort todos with non-completed first\r\n\r\n        return filteredTodos;\r\n    }\r\n};"]}