{"version":3,"sources":["../../../../app/tests/components/AddTodo.test.jsx"],"names":["React","require","ReactDOM","expect","$","TestUtils","AddTodo","describe","it","toExist","strTodoToAdd","spy","createSpy","addTodo","renderIntoDocument","$el","findDOMNode","refs","value","Simulate","submit","find","toHaveBeenCalledWith","toNotHaveBeenCalled"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,WAAWD,QAAQ,WAAR,CAAf;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,IAAIH,QAAQ,QAAR,CAAR;AACA;AACA,IAAII,YAAYJ,QAAQ,yBAAR,CAAhB;;AAEA,IAAIK,UAAUL,QAAQ,SAAR,CAAd;;AAEAM,SAAS,SAAT,EAAoB,YAAM;AACtBC,WAAG,cAAH,EAAmB,YAAM;AACrBL,uBAAOG,OAAP,EAAgBG,OAAhB;AACH,SAFD;;AAIAD,WAAG,6CAAH,EAAkD,YAAM;AACpD,oBAAIE,eAAe,SAAnB;;AAEA,oBAAIC,MAAMR,OAAOS,SAAP,EAAV;AACA,oBAAIC,UAAUR,UAAUS,kBAAV,CAA6B,oBAAC,OAAD,IAAS,WAAWH,GAApB,GAA7B,CAAd;AACA,oBAAII,MAAMX,EAAEF,SAASc,WAAT,CAAqBH,OAArB,CAAF,CAAV;;AAEAA,wBAAQI,IAAR,CAAa,eAAb,EAA8BC,KAA9B,GAAsCR,YAAtC;;AAEA;AACAL,0BAAUc,QAAV,CAAmBC,MAAnB,CAA0BL,IAAIM,IAAJ,CAAS,MAAT,EAAiB,CAAjB,CAA1B;;AAEAlB,uBAAOQ,GAAP,EAAYW,oBAAZ,CAAiCZ,YAAjC;AACH,SAbD;;AAeAF,WAAG,+CAAH,EAAoD,YAAM;AACtD,oBAAIE,eAAe,EAAnB;;AAEA,oBAAIC,MAAMR,OAAOS,SAAP,EAAV;AACA,oBAAIC,UAAUR,UAAUS,kBAAV,CAA6B,oBAAC,OAAD,IAAS,WAAWH,GAApB,GAA7B,CAAd;AACA,oBAAII,MAAMX,EAAEF,SAASc,WAAT,CAAqBH,OAArB,CAAF,CAAV;;AAEAA,wBAAQI,IAAR,CAAa,eAAb,EAA8BC,KAA9B,GAAsCR,YAAtC;;AAEA;AACAL,0BAAUc,QAAV,CAAmBC,MAAnB,CAA0BL,IAAIM,IAAJ,CAAS,MAAT,EAAiB,CAAjB,CAA1B;;AAEAlB,uBAAOQ,GAAP,EAAYY,mBAAZ;AACH,SAbD;AAcH,CAlCD","file":"AddTodo.test.js","sourcesContent":["let React = require('react');\r\nlet ReactDOM = require('react-dom');\r\nlet expect = require('expect');\r\nlet $ = require('jQuery');\r\n// Makes tests for React components easier\r\nlet TestUtils = require('react-addons-test-utils');\r\n\r\nlet AddTodo = require('AddTodo');\r\n\r\ndescribe('AddTodo', () => {\r\n    it('should exist', () => {\r\n        expect(AddTodo).toExist();\r\n    });\r\n\r\n    it('should call onAddTodo if valid text entered', () => {\r\n        let strTodoToAdd = 'Plaaaay';\r\n\r\n        let spy = expect.createSpy();\r\n        let addTodo = TestUtils.renderIntoDocument(<AddTodo onAddTodo={spy}/>);\r\n        let $el = $(ReactDOM.findDOMNode(addTodo));\r\n\r\n        addTodo.refs['new-todo-text'].value = strTodoToAdd;\r\n\r\n        // Activate the form submit or simulate the submit event\r\n        TestUtils.Simulate.submit($el.find('form')[0]);\r\n\r\n        expect(spy).toHaveBeenCalledWith(strTodoToAdd);\r\n    });\r\n\r\n    it('should call onAddTodo if invalid text entered', () => {\r\n        let strTodoToAdd = '';\r\n\r\n        let spy = expect.createSpy();\r\n        let addTodo = TestUtils.renderIntoDocument(<AddTodo onAddTodo={spy}/>);\r\n        let $el = $(ReactDOM.findDOMNode(addTodo));\r\n\r\n        addTodo.refs['new-todo-text'].value = strTodoToAdd;\r\n\r\n        // Activate the form submit\r\n        TestUtils.Simulate.submit($el.find('form')[0]);\r\n\r\n        expect(spy).toNotHaveBeenCalled();\r\n    });\r\n});"]}